{"version":3,"sources":["types/Filter.tsx","store/сurrentTodo.ts","store/loading.ts","store/index.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["Filter","todoActions","payload","type","loadActions","loadingReducer","isLoading","action","selectors","state","loading","todo","rootReducer","combineReducers","currentTodo","store","createStore","composeWithDevTools","applyMiddleware","thunk","TodoList","todos","todoOpener","className","map","id","completed","undefined","title","onClick","TodoFilter","getQuery","selectedFilter","useState","queryChange","setQueryChange","useEffect","onChange","event","target","value","ALL","ACTIVE","COMPLITED","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","isLoaded","setIsLoaded","user","setUser","useSelector","dispatch","useDispatch","userId","userFromServer","href","email","name","App","setTodos","visibleTodos","setVisibleTodos","query","setQuery","filter","setFilter","savedTodo","setSavedTodo","isTodoLoading","modalIsOpened","todoList","searchByWord","params","toLowerCase","toLocaleLowerCase","includes","userQuery","userFilter","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.97ae0916.chunk.js","sourcesContent":["export enum Filter {\n  ALL = 'all',\n  ACTIVE = 'active',\n  COMPLITED = 'complited',\n}\n","import { Todo } from '../types/Todo';\n\ntype SelectedTodoAction = {\n  type: 'todo/select',\n  payload: Todo,\n};\n\ntype ClearTodoAction = {\n  type: 'todo/clear',\n};\n\ntype CurrentTodoAction = SelectedTodoAction | ClearTodoAction;\n\nexport const selectedTodoReducer = (\n  currentTodo: Todo | null = null,\n  action: CurrentTodoAction,\n) => {\n  switch (action.type) {\n    case 'todo/select':\n      return action.payload;\n\n    case 'todo/clear':\n      return null;\n\n    default:\n      return currentTodo;\n  }\n};\n\nexport const todoActions = {\n  todoSelect: (payload: Todo): SelectedTodoAction => ({\n    type: 'todo/select',\n    payload,\n  }),\n\n  todoClear: (): ClearTodoAction => ({\n    type: 'todo/clear',\n  }),\n};\n","type StartLoadingAction = {\n  type: 'START_LOADING',\n};\n\ntype FinishLoadingAction = {\n  type: 'FINISH_LOADING',\n};\n\ntype Action = (\n  StartLoadingAction\n  | FinishLoadingAction\n);\n\nconst loadingReducer = (isLoading = false, action: Action) => {\n  switch (action.type) {\n    case 'START_LOADING':\n      return true;\n\n    case 'FINISH_LOADING':\n      return false;\n\n    default:\n      return isLoading;\n  }\n};\n\nexport const loadActions = {\n  startLoading: (): StartLoadingAction => ({\n    type: 'START_LOADING',\n  }),\n\n  finishLoading: (): FinishLoadingAction => ({\n    type: 'FINISH_LOADING',\n  }),\n};\n\nexport default loadingReducer;\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport { Todo } from '../types/Todo';\nimport { selectedTodoReducer } from './сurrentTodo';\nimport loadingReducer from './loading';\n\ntype RootState = {\n  loading: boolean;\n  todo: Todo | null;\n};\n\nexport const selectors = {\n  isLoading: (state: RootState) => state.loading,\n  getTodo: (state: RootState) => state.todo,\n};\n\nconst rootReducer = combineReducers({\n  loading: loadingReducer,\n  todo: selectedTodoReducer,\n});\n\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  todoOpener: (todo: Todo) => void;\n};\n\nexport const TodoList: React.FC<Props> = ({ todos, todoOpener }) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <tr\n          data-cy=\"todo\"\n          className=\"\"\n          key={todo.id}\n        >\n          <td className=\"is-vcentered\">{todo.id}</td>\n          <th className=\"is-vcentered\">\n            <span className=\"icon\">\n              <i className={todo.completed === true\n                ? 'fas fa-check'\n                : undefined}\n              />\n            </span>\n          </th>\n          <td className=\"is-vcentered is-expanded\">\n            <p\n              className={todo.completed === true\n                ? 'has-text-success'\n                : 'has-text-danger'}\n            >\n              {todo.title}\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => todoOpener(todo)}\n            >\n              <span className=\"icon\">\n                <i className=\"far fa-eye\" />\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","import React, { useEffect, useState } from 'react';\nimport { Filter } from '../../types/Filter';\n\ntype Props = {\n  getQuery: (option: string) => void,\n  selectedFilter: (searchWord: string) => void,\n};\n\nexport const TodoFilter: React.FC<Props> = ({ getQuery, selectedFilter }) => {\n  const [queryChange, setQueryChange] = useState('');\n\n  useEffect(() => getQuery(queryChange), [queryChange]);\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={(event) => selectedFilter(event.target.value)}\n          >\n            <option value={Filter.ALL}>All</option>\n            <option value={Filter.ACTIVE}>Active</option>\n            <option value={Filter.COMPLITED}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={queryChange}\n          onChange={(event) => setQueryChange(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {queryChange\n        && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setQueryChange('')}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(1000)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getUser } from '../../api';\nimport { selectors } from '../../store';\nimport { todoActions } from '../../store/сurrentTodo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\nexport const TodoModal: React.FC = () => {\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [user, setUser] = useState<User>();\n\n  const todo = useSelector(selectors.getTodo);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (todo) {\n      getUser(todo.userId)\n        .then(userFromServer => {\n          setUser(userFromServer);\n          setIsLoaded(true);\n        });\n    }\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!isLoaded ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              Todo #\n              {todo && todo.id}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => dispatch(todoActions.todoClear())}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo && todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo && todo.completed\n                ? <strong className=\"has-text-success\">Done</strong>\n                : <strong className=\"has-text-danger\">Planned</strong>}\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\nimport { Filter } from './types/Filter';\nimport { selectors } from './store';\nimport { loadActions } from './store/loading';\nimport { todoActions } from './store/сurrentTodo';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [visibleTodos, setVisibleTodos] = useState<Todo[]>([]);\n  const [query, setQuery] = useState('');\n  const [filter, setFilter] = useState<string>(Filter.ALL);\n  const [savedTodo, setSavedTodo] = useState<Todo>();\n\n  const dispatch = useDispatch();\n  const isTodoLoading = useSelector(selectors.isLoading);\n  const modalIsOpened = useSelector(selectors.getTodo);\n\n  useEffect(() => {\n    getTodos().then(todoList => {\n      setTodos(todoList);\n      setVisibleTodos(todoList);\n      dispatch(loadActions.startLoading());\n    });\n  }, []);\n\n  const searchByWord = (title: string) => {\n    const params = query.toLowerCase();\n\n    return title.toLocaleLowerCase().includes(params);\n  };\n\n  useEffect(() => {\n    switch (filter) {\n      case Filter.ALL:\n        setVisibleTodos(todos.filter(todo => searchByWord(todo.title)));\n        break;\n\n      case Filter.ACTIVE:\n        setVisibleTodos(todos.filter(todo => !todo.completed && searchByWord(todo.title)));\n        break;\n\n      case Filter.COMPLITED:\n        setVisibleTodos(todos.filter(todo => todo.completed && searchByWord(todo.title)));\n        break;\n      default:\n        break;\n    }\n  }, [query, filter]);\n\n  const todoOpener = (todo: Todo) => {\n    setSavedTodo(todo);\n    dispatch(todoActions.todoSelect(todo));\n  };\n\n  const getQuery = (userQuery: string) => {\n    setQuery(userQuery);\n  };\n\n  const selectedFilter = (userFilter: string) => {\n    setFilter(userFilter);\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                getQuery={getQuery}\n                selectedFilter={selectedFilter}\n              />\n            </div>\n\n            <div className=\"block\">\n              {!isTodoLoading\n                ? <Loader />\n                : (\n                  <TodoList\n                    todos={visibleTodos}\n                    todoOpener={todoOpener}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {modalIsOpened\n      && savedTodo\n      && (\n        <TodoModal />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { store } from './store';\nimport { App } from './App';\n\n// Just a convenient component with all the wrappers for the `App`\n// The Router component (if you use it) should be placed inside the Provider\nconst Root = () => (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}